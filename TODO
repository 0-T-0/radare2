 ____  ___ ____  ___ ____  ___  ______   ____
|  _ \/   \'   \/   \  _ \/ _ \ \__   | /    \
|    <  V  . T  . V      <   _/ .--'_/ |  ()  |
|_|\__|_|__|___/|_|_|_|\__\___/ |_____(_)____/

----------------------------------------[ todo 

<{include libr/TODO}>
** See libr/*/TODO FMI


* Implement r_flag_sort () by name or offset
* stack analysis
* code analysis with r_parse

* Move 'r_syscall_t' stuff into r_debug
  - Sync r_core

* /main segfaults
 - this is because regexp dosnt works -- NEEDS FIX
 - overflows the console.. -- NEEDS FIX

* Finish to write manpages
  - manpages for r2, r2rc, r2rc-tool, rafind2 and rasign2 are missing

BUGS
====
  * anal fastargs
  * console grep
  * x@esp&&x@eip  # BUG

* analyze push arguments before function calls
  - define number of arguments for given function
  - when the number of arguments differs between the calling
    and the result of the code analysis of the given function
    we should warn
    - this kind of warnings must be done with r_log_ functions
      so we hook it into a log file

* diff code analysis
  - diff two programs
     1st level:
        - check all functions EQUAL, DIFFERENT, REMOVED, ADDED
        - check all symbols
        - check all imports
        - check all strings
     2nd level:
        - basic block level diffing (output in graph mode)

* Implement process launcher wrapper
  - opens xterm and redirects stdin/stdout/stderr
  - Allows to change chroot
  - Allows to setup chroot
  - Define uid/gid

* is RCore->block and blocksize a RBuf ? refactor!11
 
* 'Vc' cursor mode makes color toggle

* Specify binmask in hexpairs
  - wx 1234:ff0f
  - /x 1234:ff0f

* radare2 -e dbg.engine=vm -d ls
  - load the program using r_bin in virtual space
  - initialize vm and set regs
  - debug backend should use the vm

* Script plugins
 - We should enable r_lib to implement plugins in any
   scripting language, so we can for example prepare
   a .c stub interface for python/perl/ruby/..
   - this requires a swig bridge
