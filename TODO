 ____  ___ ____  ___ ____  ___  ______   ____
|  _ \/   \'   \/   \  _ \/ _ \ \__   | /    \
|    <  V  . T  . V      <   _/ .--'_/ |  ()  |
|_|\__|_|__|___/|_|_|_|\__\___/ |_____(_)____/

* r_cmd.vapi not done?!?

* add file.md5 check support when opening new file or project or so..

* anal bug:
[0x08048eec]> pd 2 
    0x08048eec    0               c20400  ret 0x4
 -> this opcodes increments the stack 8 bytes (4+4) . it is not handled correctly


----------------------------------------[ todo 
33       decompilation               -- we need better code analysis, but basic decompilation will be in 0.5
29       bindiffing (graph)          -- nibble is working on this too, pancake has some binary diffing in C
26       better code analysis        -- nibble is mainly working on this now
25       windows support             -- please report bugs, pancake will
22       gdb remote support          -- not prioritary atm (volunteers?) linked to bochs/qemu
20       hardware breakpoints        -- no plans for next release..will probably be in 0.6
18       code emulation              -- some work has been done in r_vm, but needs much more refactoring
18       Debug programs in isolated environment
                                     -- this is simple issue, any volunteer?
14       threaded debugger           -- some work will be done, but dont expect big changes
13       radare scripting like in r1 -- please, report issues in mailing list or privmail
13       dalvik (android)            -- no plans, no hw, any volunteer? please ask for things to be done if you want to help on this
11       write support for RBin      -- nibble will work on this, but code analysis is prioritary atm
11       bochs and qemu support      -- very low priority, this depends on gdb support
9        pdb support                 -- any volunteer to convert pdb into radare script
9        RLine with autocompletion   -- no plans atm, but this feature will come eventually
8        signature support           -- DONE (volunteers to generate database
6        web interface               -- volunteers?
5        floating point debugger     -- very low priority at this point
3        osx support                 -- x86-32 and x86-64 hardware required, volunteers? read doc/osx fmi
3        extended dwarf support      -- zero priority for next release :)
----------------------------------------[ todo 

<{include libr/TODO}>
** See libr/*/TODO FMI

* Added 'prj.name', 'prj.desc' and 'prj.md5'

* Add description to project e file.desc ?
* Merge r_socket inside r_util ?
* Add SSL support to r_socket ?
* Move disasm loop into r_print (r_print should depend on r_asm)

* references: data (read, write), code (call, jmp)

* visual byte cursor in disassembly

* stack analysis
* code analysis with r_parse
  RAnalAopArg {
    int size;
    int delta;
    int type;
  }
  r_anal_aop_arg_set ();
  r_anal_aop_arg_get ();
  r_anal_aop_arg_binmask ();

* Move 'r_syscall_t' stuff into r_debug
  - Sync r_core

* /main segfaults
 - this is because regexp dosnt works -- NEEDS FIX
 - overflows the console.. -- NEEDS FIX

* Finish to write manpages
  - manpages for r2, r2rc, r2rc-tool, rafind2 and rasign2 are missing

BUGS
====
  * anal fastargs
  * anal_x86_x86im vars 0xff...
  * console grep
  * x@esp&&x@eip  # BUG

* analyze push arguments before function calls
  - define number of arguments for given function
  - when the number of arguments differs between the calling
    and the result of the code analysis of the given function
    we should warn
    - this kind of warnings must be done with r_log_ functions
      so we hook it into a log file

* diff code analysis
  - diff two programs
     1st level:
        - check all functions EQUAL, DIFFERENT, REMOVED, ADDED
        - check all symbols
        - check all imports
        - check all strings
     2nd level:
        - basic block level diffing (output in graph mode)

* Implement process launcher wrapper
  - opens xterm and redirects stdin/stdout/stderr
  - Allows to change chroot
  - Allows to setup chroot
  - Define uid/gid

* is RCore->block and blocksize a RBuf ? refactor!11
 
* 'Vc' cursor mode makes color toggle

* radare2 -e dbg.engine=vm -d ls
  - load the program using r_bin in virtual space
  - initialize vm and set regs
  - debug backend should use the vm

* Script plugins
 - We should enable r_lib to implement plugins in any
   scripting language, so we can for example prepare
   a .c stub interface for python/perl/ruby/..
   - this requires a swig bridge
